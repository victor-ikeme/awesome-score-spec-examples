# score.yaml
apiVersion: score.dev/v1b1
metadata:
  name: portainer
  annotations:
    awesome-score-spec.dev/description: "A universal Portainer CE workload for both Docker Compose and Kubernetes."
service:
  ports:
    web-ui:
      port: 9000
      targetPort: 9000
containers:
  portainer:
    image: portainer/portainer-ce:alpine
    args:
      - "-H"
      - "unix:///var/run/docker.sock"
    readinessProbe:
      httpGet:
        path: /
        port: 9000
    resources:
      requests: { cpu: "100m", memory: "128Mi" }
      limits: { cpu: "500m", memory: "256Mi" }
    volumes:
      # Mounts the standard persistent volume for Portainer's data
      /data:
        source: ${resources.portainer-data}
      # Declaratively requests access to the Docker socket
      /var/run/docker.sock:
        source: ${resources.docker-socket}
resources:
  # A standard volume for persistent data
  portainer-data:
    type: volume
  # A special resource type for the Docker socket.
  # Each platform will implement this differently.
  docker-socket:
    type: docker-socket