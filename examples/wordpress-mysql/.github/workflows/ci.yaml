name: ci-directory
permissions:
  contents: read
  id-token: write
on:
  workflow_dispatch:
    inputs:
      dir:
        description: 'Directory to process'
        required: true
jobs:
  detect-yaml-files:
    runs-on: ubuntu-24.04
    outputs:
      yaml_files: ${{ steps.set-yaml-files.outputs.yaml_files }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Find YAML files in score/
        id: set-yaml-files
        run: |
          YAML_FILES=$(find examples/${{ github.event.inputs.dir }}/score -type f -name "*.yaml" | sed 's|examples/${{ github.event.inputs.dir }}/score/||' | sort -u || true)
          if [ -z "$YAML_FILES" ]; then
            echo "No YAML files found in examples/${{ github.event.inputs.dir }}/score/"
            exit 1
          fi
          YAML_FILES_JSON=$(echo "$YAML_FILES" | jq -R -s -c 'split("\n") | map(select(. != ""))')
          echo "yaml_files=$YAML_FILES_JSON" >> $GITHUB_OUTPUT
          echo "YAML files: $YAML_FILES_JSON"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  score-validate:
    needs: detect-yaml-files
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        yaml_file: ${{ fromJson(needs.detect-yaml-files.outputs.yaml_files) }}
    env:
      HUMCTL_VERSION: '*'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install humctl
        uses: humanitec/setup-cli-action@v1
        with:
          version: ${{ env.HUMCTL_VERSION }}
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: humctl score validate
        run: |
          humctl score validate examples/${{ github.event.inputs.dir }}/score/${{ matrix.yaml_file }} \
              --strict \
              --local

  score-compose:
    needs: detect-yaml-files
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        yaml_file: ${{ fromJson(needs.detect-yaml-files.outputs.yaml_files) }}
    env:
      SCORE_COMPOSE_VERSION: 'latest'
      SCORE_FILE: score/${{ matrix.yaml_file }}
      WORKLOAD_NAME: ${{ replace(matrix.yaml_file, '.yaml', '') }}
      CONTAINER_NAME: ${{ replace(matrix.yaml_file, '.yaml', '') }}
      CONTAINER_IMAGE: ${{ replace(matrix.yaml_file, '.yaml', '') }}:local
      PORT: 80
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install score-compose
        uses: score-spec/setup-score@v3
        with:
          file: score-compose
          token: ${{ secrets.GITHUB_TOKEN }}
          version: ${{ env.SCORE_COMPOSE_VERSION }}
      - name: Check for Makefile
        run: |
          if [ ! -f examples/${{ github.event.inputs.dir }}/Makefile ]; then
            echo "No Makefile found in examples/${{ github.event.inputs.dir }}"
            exit 1
          fi
      - name: Run make compose-test
        run: |
          cd examples/${{ github.event.inputs.dir }}
          make -f Makefile compose-test SCORE_FILE=${{ env.SCORE_FILE }} WORKLOAD_NAME=${{ env.WORKLOAD_NAME }} PORT=${{ env.PORT }}
      - name: Run make compose-down
        if: always()
        run: |
          cd examples/${{ github.event.inputs.dir }}
          make -f Makefile compose-down SCORE_FILE=${{ env.SCORE_FILE }} WORKLOAD_NAME=${{ env.WORKLOAD_NAME }} PORT=${{ env.PORT }} || true

  score-k8s:
    needs: detect-yaml-files
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        yaml_file: ${{ fromJson(needs.detect-yaml-files.outputs.yaml_files) }}
    env:
      SCORE_K8S_VERSION: 'latest'
      SCORE_FILE: score/${{ matrix.yaml_file }}
      WORKLOAD_NAME: ${{ replace(matrix.yaml_file, '.yaml', '') }}
      NAMESPACE: default
      PORT: 80
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install score-k8s
        uses: score-spec/setup-score@v3
        with:
          file: score-k8s
          token: ${{ secrets.GITHUB_TOKEN }}
          version: ${{ env.SCORE_K8S_VERSION }}
      - name: Create Kind cluster
        run: |
          curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.23.0/kind-linux-amd64
          chmod +x ./kind
          ./kind create cluster
      - name: Check for Makefile
        run: |
          if [ ! -f examples/${{ github.event.inputs.dir }}/Makefile ]; then
            echo "No Makefile found in examples/${{ github.event.inputs.dir }}"
            exit 1
          fi
      - name: Run make k8s-up
        id: k8s-up
        run: |
          cd examples/${{ github.event.inputs.dir }}
          make -f Makefile k8s-up SCORE_FILE=${{ env.SCORE_FILE }} WORKLOAD_NAME=${{ env.WORKLOAD_NAME }} PORT=${{ env.PORT }}
      - name: Run make k8s-test
        run: |
          cd examples/${{ github.event.inputs.dir }}
          make -f Makefile k8s-test SCORE_FILE=${{ env.SCORE_FILE }} WORKLOAD_NAME=${{ env.WORKLOAD_NAME }} PORT=${{ env.PORT }}
      - name: Run make k8s-down
        if: always()
        run: |
          cd examples/${{ github.event.inputs.dir }}
          make -f Makefile k8s-down SCORE_FILE=${{ env.SCORE_FILE }} WORKLOAD_NAME=${{ env.WORKLOAD_NAME }} PORT=${{ env.PORT }} || true
      - name: Catch k8s-up errors
        if: ${{ failure() && steps.k8s-up.outcome == 'failure' }}
        run: |
          cd examples/${{ github.event.inputs.dir }}
          kubectl get events -n ${NAMESPACE}
          kubectl logs \
              -l app.kubernetes.io/name=${{ env.WORKLOAD_NAME }} \
              -n ${NAMESPACE}