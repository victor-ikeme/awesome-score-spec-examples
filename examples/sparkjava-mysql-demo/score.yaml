# score.yaml
apiVersion: score.dev/v1b1
metadata:
  name: sparkjava-mariadb
  annotations:
    awesome-score-spec.dev/description: "A Java backend and MariaDB database using file-based secrets."
service:
  ports:
    # Exposes the Java backend application on port 8080
    http:
      port: 8080
      targetPort: 8080
containers:
  backend:
    image: .
    # The backend application also mounts the secret file.
    # We assume the Java application is coded to read its password from this file path.
    readinessProbe:
      httpGet:
        path: /actuator/health # A standard health endpoint
        port: 8080
  db:
    image: mariadb:10.6.4-focal
    variables:
      # The database is configured to use the mounted secret file
      MYSQL_DATABASE: example
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/db-password
    # The 'files' directive securely mounts the password into the container
    files:
      /run/secrets/db-password:
        content: ${resources.env.DB_PASSWORD}
    # A readiness probe is essential for the database
    readinessProbe:
      exec:
        # 'mysqladmin ping' is the standard health check for MariaDB/MySQL
        command:
          - /bin/sh
          - -c
          - "mysqladmin ping -h localhost --password=$(cat /run/secrets/db-password)"
    # The persistent volume for database data is mounted here
    volumes:
      /var/lib/mysql:
        source: ${resources.db-data}
resources:
  # This resource allows the secret's content to be sourced from a .env file
  env:
    type: environment
  # This resource declares the persistent volume for the database
  db-data:
    type: volume