@{
    ViewData["Title"] = "ASP.NET + MSSQL on Score";
}

<div id="myCarousel" class="carousel slide" data-ride="carousel" data-interval="6000">
    <ol class="carousel-indicators">
        <li data-target="#myCarousel" data-slide-to="0" class="active"></li>
        <li data-target="#myCarousel" data-slide-to="1"></li>
        <li data-target="#myCarousel" data-slide-to="2"></li>
    </ol>
    <div class="carousel-inner" role="listbox">
        <div class="item active">
            <img src="~/images/banner1.svg" alt="ASP.NET" class="img-responsive" />
            <div class="carousel-caption" role="option">
                <p>
                    This ASP.NET Core app runs on a fully declarative internal developer platform powered by Score.
                    <a class="btn btn-default" href="https://score.dev">
                        About Score.dev
                    </a>
                </p>
            </div>
        </div>
        <div class="item">
            <img src="~/images/banner2.svg" alt="Platform Engineering" class="img-responsive" />
            <div class="carousel-caption" role="option">
                <p>
                    See how platform engineers use <code>score.yaml</code> to standardize deployments across dev, staging, and prod.
                    <a class="btn btn-default" href="https://github.com/YOUR_USERNAME/awesome-score-spec-examples">
                        View GitHub Repo
                    </a>
                </p>
            </div>
        </div>
        <div class="item">
            <img src="~/images/banner3.svg" alt="Kubernetes and MSSQL" class="img-responsive" />
            <div class="carousel-caption" role="option">
                <p>
                    This demo runs with Score, MSSQL, and ASP.NET — fully portable via `score-compose`, `score-k8s`, or `humctl score`.
                    <a class="btn btn-default" href="https://docs.score.dev">
                        Score Docs
                    </a>
                </p>
            </div>
        </div>
    </div>
    <a class="left carousel-control" href="#myCarousel" role="button" data-slide="prev">
        <span class="glyphicon glyphicon-chevron-left" aria-hidden="true"></span>
        <span class="sr-only">Previous</span>
    </a>
    <a class="right carousel-control" href="#myCarousel" role="button" data-slide="next">
        <span class="glyphicon glyphicon-chevron-right" aria-hidden="true"></span>
        <span class="sr-only">Next</span>
    </a>
</div>

<div class="row">
    <div class="col-md-3">
        <h2>Stack Overview</h2>
        <ul>
            <li>ASP.NET Core MVC app</li>
            <li>Connected to MSSQL backend</li>
            <li>Containerized and defined in <code>score.yaml</code></li>
        </ul>
    </div>
    <div class="col-md-3">
        <h2>Score CLI Usage</h2>
        <ul>
            <li><code>score init</code> – Scaffold a workload spec</li>
            <li><code>score-compose</code> – Local Docker deployment</li>
            <li><code>score-k8s</code> – Kubernetes manifest generation</li>
            <li><code>humctl score</code> – Deploy via Humanitec</li>
        </ul>
    </div>
    <div class="col-md-3">
        <h2>Project Links</h2>
        <ul>
            <li><a href="https://github.com/YOUR_USERNAME/awesome-score-spec-examples/tree/main/aspnetcore-mssql">GitHub Project Folder</a></li>
            <li><a href="https://score.dev">Score.dev Official Site</a></li>
            <li><a href="https://docs.score.dev">Score.dev Documentation</a></li>
            <li><a href="https://platformengineering.org">Platform Engineering Hub</a></li>
        </ul>
    </div>
    <div class="col-md-3">
        <h2>Try it Yourself</h2>
        <ul>
            <li>Clone the repo</li>
            <li>Run <code>score init</code> in the app folder</li>
            <li>Deploy with your preferred runtime</li>
            <li>Works with Docker, Kubernetes, or IDPs</li>
        </ul>
    </div>
</div>
