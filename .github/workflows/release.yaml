---
name: release
permissions:
  contents: read
  id-token: write
  packages: write
on:
  push:
    tags:
      - 'v*'
env:
  IMAGE_TAG: ${{ github.ref_name }}
jobs:
  detect-changed-dirs:
    runs-on: ubuntu-24.04
    outputs:
      dirs: ${{ steps.set-dirs.outputs.dirs }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Find changed directories
        id: set-dirs
        run: |
          CHANGED_FILES=$(git diff --name-only HEAD^ HEAD | grep -E \
            '^examples/[^/]+/(apps/.*Dockerfile|score/.*\.yaml)$' || true)
          if [ -z "$CHANGED_FILES" ]; then
            echo "No changed Dockerfiles or YAML files found"
            echo "dirs=[]" >> $GITHUB_OUTPUT
            exit 0
          fi
          DIRS_JSON=$(echo "$CHANGED_FILES" | sed 's|^examples/\([^/]\+\)/.*$|\1|' | \
            sort -u | jq -R -s -c 'split("\n") | map(select(. != ""))')
          echo "dirs=$DIRS_JSON" >> $GITHUB_OUTPUT
          echo "Dirs output: $DIRS_JSON"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  detect-dockerfiles:
    needs: detect-changed-dirs
    if: ${{ needs.detect-changed-dirs.outputs.dirs != '[]' }}
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        dir: ${{ fromJson(needs.detect-changed-dirs.outputs.dirs) }}
    outputs:
      dockerfiles: ${{ steps.set-dockerfiles.outputs.dockerfiles }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Debug directory contents
        run: |
          echo "Listing examples/${{ matrix.dir }}/apps"
          ls -la examples/${{ matrix.dir }}/apps || echo "Apps directory not found"
      - name: Find Dockerfiles in apps/
        id: set-dockerfiles
        run: |
          DOCKERFILES=$(find examples/${{ matrix.dir }}/apps -type f -name "Dockerfile" | \
            sed 's|examples/${{ matrix.dir }}/apps/||' | sort -u || true)
          if [ -z "$DOCKERFILES" ]; then
            echo "No Dockerfiles found in examples/${{ matrix.dir }}/apps/"
            exit 1
          fi
          DOCKERFILES_JSON=$(echo "$DOCKERFILES" | jq -R -s -c \
            'split("\n") | map(select(. != ""))')
          echo "dockerfiles=$DOCKERFILES_JSON" >> $GITHUB_OUTPUT
          echo "Dockerfiles: $DOCKERFILES_JSON"

  build-push:
    needs: [detect-changed-dirs, detect-dockerfiles]
    if: ${{ needs.detect-changed-dirs.outputs.dirs != '[]' }}
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        dir: ${{ fromJson(needs.detect-changed-dirs.outputs.dirs) }}
        dockerfile: ${{ fromJson(needs.detect-dockerfiles.outputs.dockerfiles) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GHCR
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | docker login \
            ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Build and push container image
        uses: docker/build-push-action@v6
        with:
          context: examples/${{ matrix.dir }}/apps/${{ matrix.dockerfile }}
          file: examples/${{ matrix.dir }}/apps/${{ matrix.dockerfile }}/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ matrix.dir }}/${{ matrix.dockerfile }}:${{ env.IMAGE_TAG }}
            ghcr.io/${{ github.repository_owner }}/${{ matrix.dir }}/${{ matrix.dockerfile }}:latest
